####... implys the workdir ####

cd .../expression

for FILE in *.bed.gz
do
echo ${FILE}
ARR=($(echo ${FILE} | sed 's/.v7.normalized_expression.bed.gz/\n/g'))
echo ${ARR}
zcat ${FILE} | cut -f1-4 > .../expression/${ARR}_gene_info.txt
done

for FILE in *_gene_info.txt
do
echo ${FILE}
ARR=($(echo ${FILE} | sed 's/_gene_info.txt/\n/g'))
echo ${ARR}
Rscript cis.R ${ARR}
done

cd .../GTEx/64278/PhenoGenotypeFiles/RootStudyConsentSet_phs000424.GTEx.v7.p2.c1.GRU/PhenotypeFiles
gunzip -c phs000424.v7.pht002742.v7.p2.c1.GTEx_Subject_Phenotypes.GRU.txt.gz > .../phenotype/phenotype.txt

cat phenotype.txt| awk '{print $1" "$2" "$4" "$5" "$6" "$7" "$8" "$10" "$12" "$13" "$14" "$15" "$16" "$17}' > sub_phenotype.txt

clean sub_phenotype.txt
dt <- read.table("sub_phenotype.txt", header=T)
for (i in 1:nrow(dt)) {
  if (dt$SEX[i]=="Donor") {
    print (i)
    dt[i,3:5] <- dt[i,5:7]
    dt[i,7:8] <- dt[i,8:9]
    dt[i,9] <- dt[i,11]
 }
}

dt <- dt[,1:9]; dt <- dt[,-6]
write.table(dt, "sub_phenotype1.txt", quote=F, col.names=T, row.names=F)



for ((i=1; i<=22; i++)); do
echo ${i}
VCFFILE=.../genotype/imputed/data/chr${i}.dose.vcf.gz
zcat ${VCFFILE} | cut -f1-8 > chr${i}.vcf
cat chr${i}.vcf | awk -F ';' '{print $1"\t"$2"\t"$3 }' > chr${i}.bed
done 

for ((i=1; i<=22; i++)); do
echo ${i}
awk '{sub("MAF=", "", $9); print}' < chr${i}.bed > chr_${i}.bed
done

for ((i=1; i<=22; i++)); do
echo ${i}
awk '{ if(($9 >= 0.05)) { print } }' chr_${i}.bed > qc/chr${i}.bed
done

for FILE in *_gene_info1.bed
do
echo ${FILE}
ARR=($(echo ${FILE} | sed 's/_gene_info1.bed/\n/g'))
echo ${ARR}
awk  'BEGIN{ OFS="\t"; }{ print $1, $2, $3, $4; }' ${FILE} > ${ARR}_gene_info.bed
done

cd .../qc
GENE=...
INTERSECTBED=.../bedtools/bedtools2/bin/intersectBed
cd ${GENE}
for FILE in `ls *_gene_info.bed`; do
echo ${FILE}
ARR=($(echo ${FILE} | sed 's/_gene_info.bed/\n/g')); echo ${ARR}
mkdir .../qc/${ARR}
 cd /net/mulan/disk2/yuef/data/GTEX/GTEx_v7/qc
for ((i=1; i<=22; i++)); do
${INTERSECTBED} -a all_chr${i}.bed  -b ${GENE}/${FILE} -wb > ./${ARR}/${ARR}_chr${i}
cd ./${ARR}
awk '{print >> $645; close($645)}' ${ARR}_chr${i}
done
done




cd .../expression/
for ((i=1;i<=48;i++))
do
for j in 1 2 5 10 15 20 25 30 35 40 50 60 70 80 90 100 150 200 250 300 350
do
Rscript calc_peer.R ${i} ${j}
done
done



